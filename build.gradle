plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.11-SNAPSHOT" apply false
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
    id "com.github.johnrengelman.shadow" version "7.1.2" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.mod_id
    version = rootProject.mod_version
    group = rootProject.mod_group_id
    required_moonlight_version = rootProject.required_moonlight_version

    repositories {

        flatDir {
            dirs 'mods'
        }

        mavenCentral()

        mavenLocal()

        maven { url "https://registry.somethingcatchy.net/repository/maven-releases/" }

        maven { url "https://maven.parchmentmc.org" }

        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }

        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases" }
        maven { url 'https://maven.ladysnake.org/releases' }


        maven {
            url "https://maven.firstdarkdev.xyz/snapshots"
        }
        maven { url 'https://jitpack.io' }

        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }
        maven {
            url = 'https://maven.neoforged.net'
        }

        maven { // Reach Entity Attributes
            url = "https://maven.jamieswhiteshirt.com/libs-release"
            content { includeGroup("com.jamieswhiteshirt") }
        }
        maven { url = "https://maven.tterrag.com/" } // Flywheel
        maven { url = "https://mvn.devos.one/snapshots/" } // Registrate, Porting Lib, Forge Tags, Milk Lib
        maven { url = "https://mvn.devos.one/releases/" }

        maven {
            url = "https://api.modrinth.com/maven"
        }

        maven {
            url = "https://maven.blamejared.com/"
        }
        maven{
            url = "https://mvn.devos.one/snapshots/"
        }
        maven { url = "https://mvn.devos.one/snapshots" }
        maven { url = "https://maven.createmod.net" } // Ponder, Flywheel

        maven { url "https://maven.misterpemodder.com/libs-release/" } // ShulkerBoxTooltip
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = rootProject.java_version.toInteger()
    }

    java {
        withSourcesJar()
    }
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "com.matthewprenger.cursegradle"
    apply plugin: "com.modrinth.minotaur"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            it.officialMojangMappings {
                setNameSyntheticMembers(false)
            }
            //it.parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}")
        }

    }

    var env = System.getenv()
    var modLoader = name

    var changelogFile = rootProject.file("changelog.md")
    var changelogText = changelogFile.exists() ? changelogFile.text : ""

    if (env.MODRINTH_TOKEN) {
        modrinth {
            projectId = rootProject.mod_id
            uploadFile = tasks.remapJar
            gameVersions = [rootProject.minecraft_version]
            if (modLoader == "forge") {
                loaders = [modLoader, "neoforge"]
            } else {
                loaders = [modLoader]
            }

            changelog = changelogText

            if (modLoader == "fabric") {
                dependencies {
                    required.project "fabric-api"
                    required.project "moonlight"
                }
            } else {
                dependencies {
                    required.project "moonlight"
                }
            }
        }
    }

    if (env.CURSEFORGE_TOKEN) {
        curseforge {
            apiKey = env.CURSEFORGE_TOKEN
            project {
                id = rootProject.project_id
                changelog = changelogText
                releaseType = 'release'
                addGameVersion rootProject.minecraft_version
                addGameVersion modLoader.capitalize()
                if (modLoader == "forge") {
                    addGameVersion "NeoForge"
                }


                mainArtifact(tasks.remapJar)

                if (modLoader == "fabric") {
                    relations {
                        requiredDependency "fabric-api"
                        requiredDependency "selene"

                        optionalDependency "the-bumblezone-fabric"
                        optionalDependency "decorative-blocks"
                        optionalDependency("flan")
                        optionalDependency("multi-item-lib")
                        optionalDependency("snowy-spirit")
                        optionalDependency("haunted-harvest")
                        optionalDependency("model-gap-fix")
                        optionalDependency("map-atlases")
                        optionalDependency("farmers-delight-fabric")
                    }
                } else {
                    relations {
                        requiredDependency("selene")

                        optionalDependency("create")
                        optionalDependency("quark")
                        optionalDependency("cc-tweaked")
                        optionalDependency("waystones")
                        optionalDependency("roughly-enough-items")
                        optionalDependency("jei")
                        optionalDependency("model-gap-fix")
                        optionalDependency("flywheel")
                        optionalDependency("configured")
                        optionalDependency("flan-forge")
                        optionalDependency("haunted-harvest")
                        optionalDependency("snowy-spirit")
                        optionalDependency("map-atlases-forge")
                        optionalDependency("decorative-blocks")
                        optionalDependency("farmers-delight")
                        optionalDependency("the-bumblezone-forge")
                        optionalDependency("map-atlases-forge")
                    }
                }
            }
        }
    }

    publishing {
        repositories {
            mavenLocal()

            if (env.NEXUS_TOKEN != null && env.NEXUS_USER != null) {
                maven {
                    url = uri("https://registry.somethingcatchy.net/repository/maven-releases/")
                    credentials {
                        username = env.NEXUS_USER
                        password = env.NEXUS_TOKEN
                    }
                }
            }
        }
    }
}

ext {
    replaceProperties = [
            minecraft_version         : minecraft_version,
            minecraft_min_version     : minecraft_min_version,
            minecraft_max_version     : minecraft_max_version,
            pack_format_number        : pack_format_number,

            mod_id                    : mod_id,
            mod_name                  : mod_name,
            mod_version               : mod_version,
            mod_license               : mod_license,
            mod_authors               : mod_authors,
            mod_description           : mod_description,
            mod_credits               : mod_credits,
            mod_homepage              : mod_homepage,
            mod_github                : mod_github,
            update_url                : update_url,

            neo_version               : neo_version,
            neo_version_range         : neo_version_range,
            loader_version_range      : loader_version_range,
            required_moonlight_version: required_moonlight_version
    ]
}


task buildAndPublishAll {
    dependsOn ':clean'
    dependsOn ':build'
    dependsOn ':forge:curseforge'
    dependsOn ':forge:modrinth'
    dependsOn ':fabric:curseforge'
    dependsOn ':fabric:modrinth'
    dependsOn ':publish'
}

buildAndPublishAll.group = 'build'
buildAndPublishAll.description = 'Runs clean, build, and publish forge and fabric and maven'