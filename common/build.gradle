architectury {
    common(enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

dependencies {

    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:${mixin_squared_version}"))
    implementation("com.github.bawnorton.mixinsquared:mixinsquared-forge:${mixin_squared_version}")

    modApi("net.mehvahdjukaar:moonlight:${moonlight_version}")


    modCompileOnly("curse.maven:irisshaders-455508:5726473")
    modCompileOnly("curse.maven:cave-enhancements-597562:4388535")
    //implementation fileTree(dir: 'mods', include: '*.jar')
    modCompileOnly("com.lowdragmc.shimmer:Shimmer-common:1.19.2-0.1.14")
    //modCompileOnly("curse.maven:roughly-enough-items-310111:4357860")
    modCompileOnly("curse.maven:jei-238222:5846878")
    modCompileOnly("curse.maven:roughly-enough-items-310111:5731643")
    modCompileOnly("curse.maven:emi-580555:6361996")

    modCompileOnly("curse.maven:farmers-respite-551453:4081312")
    modCompileOnly("curse.maven:flan-404578:5290167")
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    modCompileOnly "dev.emi:trinkets:${project.trinkets_version}"
    modCompileOnly("curse.maven:curios-309927:4581099")
    modCompileOnly("curse.maven:jade-324717:5884237")
    modCompileOnly("curse.maven:quark-243121:5378961")
    modCompileOnly("curse.maven:zeta-968868:5597406")

    modCompileOnly ("dev.engine-room.flywheel:flywheel-neoforge-${flywheel_forge_version}")
    modCompileOnly("dev.engine-room.vanillin:vanillin-neoforge-${vanillin_version}")
    // modCompileOnly("net.createmod.ponder:Ponder-NeoForge-${ponder_version}")

    modCompileOnly("curse.maven:farmers-delight-398521:5772720")

    modCompileOnly("curse.maven:soul-fire-d-662413:6248773")
    modCompileOnly("curse.maven:entity-model-features-844662:6001148")

    modCompileOnly("maven.modrinth:immediatelyfast:1.6.1+1.21.1-neoforge")

//    modCompileOnly("curse.maven:immediatelyfast-686911:5894662")
    //modCompileOnly("maven.modrinth:immediatelyfast:1.2.8+1.20.4-forge")
    modCompileOnly("maven.modrinth:wilder-wild:2.4.5-mc1.20.1")
    modCompileOnly("curse.maven:buzzier-bees-355458:4776328")
    modCompileOnly("maven.modrinth:frozenlib:1.7.4-mc1.20.1")
    modCompileOnly("curse.maven:amendments-896746:6904971")
    modCompileOnly("com.misterpemodder:shulkerboxtooltip-common:${shulker_box_tooltip_version}") { transitive false }
    modCompileOnly("curse.maven:blueprint-382216:5292242")
    modCompileOnly("curse.maven:environmental-388992:6060255")

}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    repositories {
        // Add repositories to publish to here.
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.compilerArgs.add("-Acrafttweaker.processor.document.output_directory=${new File(rootProject.buildDir, "docsOut")}")
    it.options.compilerArgs.add("-Acrafttweaker.processor.document.multi_source=true")

    it.options.compilerArgs << "-Xmaxerrs" << "4000"

}